# [START swagger]
swagger: "2.0"
info:
  description: "API for interacting with Pintro's Graph database."
  title: "Piintro Graph API"
  version: "0.1"
host: "bluej-pintro-project.appspot.com"
# [END swagger]
consumes:
- "application/json"
produces:
- "application/json"
schemes:
- "https"
basePath: /
paths:
  "/users":
    parameters:
      - name: payload
        required: true
        in: body
        schema:
          $ref: '#/definitions/Users'
    post:
      responses:
        '201':
          description: User created
        '409':
          description: User with that email already exists
        '422':
          description: Invalid Email
      summary: Create a user
      operationId: create_user
      tags:
        - users
  '/users/{email}':
    parameters:
      - name: payload
        required: true
        in: body
        schema:
          $ref: '#/definitions/Users'
      - name: email
        in: path
        required: true
        type: string
    put:
      responses:
        '204':
          description: User fields updated.
        '404':
          description: User not found
        '422':
          description: Invalid Email
      summary: Update a user by the given fields
      operationId: update_user
      tags:
        - users
    get:
      responses:
        '404':
          description: User not found
        '422':
          description: Invalid Email
      summary: Fetch a user given its email
      operationId: get_users
      tags:
        - users
    delete:
      responses:
        '204':
          description: User deleted.
        '404':
          description: User not found
        '422':
          description: Invalid Email
      summary: Delete a user given its email
      operationId: delete_user
      tags:
        - users
definitions:
  Users:
    required:
      - email
      - full_name
      - password
    properties:
      email:
        type: string
        title: The user email.
      password:
        type: string
        title: The user password.
      full_name:
        type: string
        title: The user full name.
      preferred_name:
        type: string
        title: The user preferred name.
      image:
        type: string
        title: image saved as array of Bytes representing the user's profile pic.
      phone:
        type: string
        title: The user's phone number.
      gender:
        type: string
        title: The User's geneder
      job_title:
        type: string
        title: current job title of the user.
      location:
        type: string
        title: current city of the user.
      short_bio:
        type: string
        title: short bio describing the user of maximum 250 characters.
      story:
        type: string
        title: story describing the user of maximum 250 words.
      education:
        type: string
        title: Highest level obtained.
    type: object
responses:
  ParseError:
    description: When a mask can't be parsed
  MaskError:
    description: When any error occurs on mask
